N, M = map(int, input().split()) # 8 <= N, M <= 25
board = [input().strip() for _ in range(N)] # 한 행(줄) 씩 입력받아 리스트에 저장

chess1 = [list('BW' * 4), list('WB' * 4)] * 4 #시작이 B / list를 사용하여 문자열을 문자 단위 리스트로 변환 -> chess1[x][y]가 동작
chess2 = [list('WB' * 4), list('BW' * 4)] * 4 #시작이 W

min_paint = float('inf')  # 최소값을 매우 큰 값으로 설정 (초기화)

#8*8과 chess1 비교하며 count1 -> chess1과 비교하여 다르면 색칠
for i in range(N - 7):  # 8x8 체스판의 시작 행 위치: 8개의 연속된 행 : N-8+1
    for j in range(M - 7):  # 8x8 체스판의 시작 열 위치
        count1, count2 = 0, 0  # 새 8*8 보드를 검사할 때마다 값을 초기화 / 체스판 두 개와 비교했을 때 색칠해야 할 개수

        for x in range(8):
            for y in range(8):
                if board[i + x][j + y] != chess1[x][y]: #현재 보드의 (i+x, j+y) 위치가 체스1과 다르면 count 1 증가
                    count1 += 1  
                if board[i + x][j + y] != chess2[x][y]: #chess와 다르면 count2를 1씩 증가
                    count2 += 1  
        #최소 색칠 횟수 갱신(반복문 안에서 실행)
        min_paint = min(min_paint, count1, count2)  # min_paint: 가능한 모든 8*8 보드에서 최소 색칠 횟수를 찾음

print(min_paint)
